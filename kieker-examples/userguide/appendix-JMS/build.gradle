apply plugin: 'application'
apply plugin: 'eclipse'

dependencies {
	compile fileTree('lib') {
		include "*.jar"
		// we use the wildcard above because we need to include 
		// libraries that depend on the actual JMS product used
		//include "kieker-*-emf.jar"
		//include "commons-logging-*.jar"
  }
}

def monitoringConfigurationActiveMQ = 'META-INF/kicker.monitoring.properties-activemq'
def monitoringConfigurationHornetQ = 'META-INF/kicker.monitoring.properties-hornetq'
def monitoringConfigurationOpenJMS = 'META-INF/kicker.monitoring.properties-openjms'

// Simplify the JAR's file name
archivesBaseName = 'JMSMonitoringAnalysis'
version = ''
	
sourceSets.main.java.srcDirs = ['src']
sourceSets.main.resources.srcDirs = ['src-resources']

def monitoringConfiguration = {
  main = 'kicker.examples.userguide.appendixJMS.BookstoreStarter'
  classpath = sourceSets.main.runtimeClasspath
  
  jvmArgs = ['-Dlog4j.configuration=META-INF/log4j.properties']
}

task runMonitoringActiveMQ(type: JavaExec) {
  configure monitoringConfiguration
  jvmArgs += "-Dkicker.monitoring.configuration=${monitoringConfigurationActiveMQ}"
}

task runMonitoringHornetQ(type: JavaExec) {
  configure monitoringConfiguration
  jvmArgs += "-Dkicker.monitoring.configuration=${monitoringConfigurationHornetQ}"
}

task runMonitoringOpenJMS(type: JavaExec) {
  configure monitoringConfiguration
  jvmArgs += "-Dkicker.monitoring.configuration=${monitoringConfigurationOpenJMS}"
}

def analysisConfiguration = {
  main = 'kicker.examples.userguide.appendixJMS.JMSAnalysisStarter'
	classpath = sourceSets.main.runtimeClasspath
  
  jvmArgs = ['-Dlog4j.configuration=META-INF/log4j.properties']
}

task runAnalysisActiveMQ(type: JavaExec) {
  configure analysisConfiguration
	args = ['org.apache.activemq.jndi.ActiveMQInitialContextFactory', 'tcp://127.0.0.1:61616/', 'queue1']
}

task runAnalysisHornetQ(type: JavaExec) {
  configure analysisConfiguration
	args = ['org.jnp.interfaces.NamingContextFactory', 'jnp://localhost:1099', '/queue/queue1']
}

task runAnalysisOpenJMS(type: JavaExec) {
  configure analysisConfiguration
	args = ['org.exolab.jms.jndi.InitialContextFactory', 'tcp://127.0.0.1:3035/', 'queue1']
}