apply plugin: 'application'
apply plugin: 'eclipse'

dependencies {
	compile fileTree('lib') {
		include "kieker-*.jar"
		include "commons-logging-*.jar"
		include "amqp-client-*.jar"
  }
}

def monitoringConfigurationAMQP = 'META-INF/kicker.monitoring.properties'

// Simplify the JAR's file name
archivesBaseName = 'AMQPMonitoringAnalysis'
version = ''
	
sourceSets.main.java.srcDirs = ['src']
sourceSets.main.resources.srcDirs = ['src-resources']

def monitoringConfiguration = {
  main = 'kicker.examples.userguide.appendixAMQP.BookstoreStarter'
  classpath = sourceSets.main.runtimeClasspath
  
  jvmArgs = ['-Dlog4j.configuration=META-INF/log4j.properties']
}

task runMonitoringAMQP(type: JavaExec) {
  configure monitoringConfiguration
  jvmArgs += "-Dkicker.monitoring.configuration=${monitoringConfigurationAMQP}"
}

def analysisConfiguration = {
  main = 'kicker.examples.userguide.appendixAMQP.AMQPAnalysisStarter'
	classpath = sourceSets.main.runtimeClasspath
  
  jvmArgs = ['-Dlog4j.configuration=META-INF/log4j.properties']
}

task runAnalysisAMQP(type: JavaExec) {
  configure analysisConfiguration
	args = ['amqp://guest:guest@127.0.0.1:5672', 'kieker']
}
